https://leetcode.com/problems/count-the-number-of-special-characters-ii/description/


3121. Count the Number of Special Characters II
Solved
Medium
Topics
Companies
Hint
You are given a string word. A letter c is called special if it appears both in lowercase and uppercase in word, and every lowercase occurrence of c appears before the first uppercase occurrence of c.

Return the number of special letters in word.

 

Example 1:

Input: word = "aaAbcBC"

Output: 3

Explanation:

The special characters are 'a', 'b', and 'c'.

Example 2:

Input: word = "abc"

Output: 0

Explanation:

There are no special characters in word.

Example 3:

Input: word = "AbBCab"

Output: 0

Explanation:

There are no special characters in word.

 

Constraints:

1 <= word.length <= 2 * 105
word consists of only lowercase and uppercase English letters.




class Solution {
  public int numberOfSpecialChars(String word) {
    int ans = 0;
    boolean[] lower = new boolean[26];
    boolean[] upper = new boolean[26];

    for (final char c : word.toCharArray())
      if (Character.isLowerCase(c))
        lower[c - 'a'] = !upper[c - 'a'];
      else
        upper[c - 'A'] = true;

    for (int i = 0; i < 26; ++i)
      if (lower[i] && upper[i])
        ++ans;

    return ans;
  }
}


or



class Solution {
    public int numberOfSpecialChars(String word) {
        int[] first = new int['z' + 1];
        int[] last = new int['z' + 1];
        for (int i = 1; i <= word.length(); ++i) {
            int j = word.charAt(i - 1);
            if (first[j] == 0) {
                first[j] = i;
            }
            last[j] = i;
        }
        int ans = 0;
        for (int i = 0; i < 26; ++i) {
            if (last['a' + i] > 0 && first['A' + i] > 0 && last['a' + i] < first['A' + i]) {
                ++ans;
            }
        }
        return ans;
    }
}


