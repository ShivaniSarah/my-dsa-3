https://leetcode.com/problems/strictly-palindromic-number/description/


2396. Strictly Palindromic Number
Medium
Topics
Companies
Hint
An integer n is strictly palindromic if, for every base b between 2 and n - 2 (inclusive), the string representation of the integer n in base b is palindromic.

Given an integer n, return true if n is strictly palindromic and false otherwise.

A string is palindromic if it reads the same forward and backward.

 

Example 1:

Input: n = 9
Output: false
Explanation: In base 2: 9 = 1001 (base 2), which is palindromic.
In base 3: 9 = 100 (base 3), which is not palindromic.
Therefore, 9 is not strictly palindromic so we return false.
Note that in bases 4, 5, 6, and 7, n = 9 is also not palindromic.
Example 2:

Input: n = 4
Output: false
Explanation: We only consider base 2: 4 = 100 (base 2), which is not palindromic.
Therefore, we return false.

 

Constraints:

4 <= n <= 105


# java


class Solution {
    public boolean isStrictlyPalindromic(int n) {
        return false;
    }
}


or



class Solution {
    public boolean isStrictlyPalindromic(int n) {
        boolean flag = true;
        for(int i = 2; i < n-1; i++){
            if(!check(Integer.toString(n,i))){
                flag = false;
                break;
            }
        }
        return flag;
    }
    public boolean check(String n){
        int left = 0;
        int right = n.length()-1;
        while(left<right){
            if(n.charAt(left)!=n.charAt(right))
                return false;
            left++;
            right--;
        }
        return true;
    }
}

or


class Solution {
    public boolean isStrictlyPalindromic(int n) {
       for(int i=2;i<=n-2;i++){
        if(!palindrome(baseConverter(n,i))){
            return false;
        }
       }
       return true;
    }

    public String baseConverter(int n,int base){
        StringBuilder result=new StringBuilder("");
        while(n>0){
            int rem=n%base;
            result.insert(0,rem);
            n=n/2;
        }
        return result.toString();
    }

    public boolean palindrome(String s){
        StringBuilder sb=new StringBuilder(s);
        if(s==sb.reverse().toString()){
            return true;
        }
        return false;
    }
}



or


