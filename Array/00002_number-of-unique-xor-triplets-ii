https://leetcode.com/problems/number-of-unique-xor-triplets-ii/


3514. Number of Unique XOR Triplets II
Solved
Medium
Topics
Companies
Hint
You are given an integer array nums.

A XOR triplet is defined as the XOR of three elements nums[i] XOR nums[j] XOR nums[k] where i <= j <= k.

Return the number of unique XOR triplet values from all possible triplets (i, j, k).

 

Example 1:

Input: nums = [1,3]

Output: 2

Explanation:

The possible XOR triplet values are:

(0, 0, 0) → 1 XOR 1 XOR 1 = 1
(0, 0, 1) → 1 XOR 1 XOR 3 = 3
(0, 1, 1) → 1 XOR 3 XOR 3 = 1
(1, 1, 1) → 3 XOR 3 XOR 3 = 3
The unique XOR values are {1, 3}. Thus, the output is 2.

Example 2:

Input: nums = [6,7,8,9]

Output: 4

Explanation:

The possible XOR triplet values are {6, 7, 8, 9}. Thus, the output is 4.

 

Constraints:

1 <= nums.length <= 1500
1 <= nums[i] <= 1500


# jva





class Solution {
   public static int uniqueXorTriplets(int[] arr) {
        int n = arr.length;
        boolean[] freq = new boolean[2048];
        int len = 0, idx = 0, ans = 0;

        for (int i = 0; i < n; i++) {
            for (int j = i; j < n; j++) {
                if (!freq[arr[i] ^ arr[j]]) len++;
                freq[arr[i] ^ arr[j]] = true;
            }
        }

        int[] nums = new int[len];

        for (int i = 0; i < 2048; i++)
            if (freq[i]) nums[idx++] = i;
        
        Arrays.fill(freq, false);

        for (int i = 0; i < len; i++) {
            for (int j = 0; j < n; j++)
                freq[nums[i] ^ arr[j]] = true;
        }
        
        for (boolean b : freq)
            if (b) ans++;

        return ans;
    }

}



