https://leetcode.com/problems/count-alternating-subarrays/description/


3101. Count Alternating Subarrays
Medium
Topics
Companies
Hint
You are given a binary array nums.

We call a subarray alternating if no two adjacent elements in the subarray have the same value.

Return the number of alternating subarrays in nums.

 

Example 1:

Input: nums = [0,1,1,1]

Output: 5

Explanation:

The following subarrays are alternating: [0], [1], [1], [1], and [0,1].

Example 2:

Input: nums = [1,0,1,0]

Output: 10

Explanation:

Every subarray of the array is alternating. There are 10 possible subarrays that we can choose.

 

Constraints:

1 <= nums.length <= 105
nums[i] is either 0 or 1.


# java


class Solution {
  public long countAlternatingSubarrays(int[] nums) {
    // dp[i] := the number of alternating subarrays ending in index i
    long[] dp = new long[nums.length];
    Arrays.fill(dp, 1);

    for (int i = 1; i < nums.length; ++i)
      if (nums[i] != nums[i - 1])
        dp[i] += dp[i - 1];

    return Arrays.stream(dp).sum();
  }
}


or


class Solution {
    public long countAlternatingSubarrays(int[] nums) {
        long ans = 1, s = 1;
        for (int i = 1; i < nums.length; ++i) {
            s = nums[i] != nums[i - 1] ? s + 1 : 1;
            ans += s;
        }
        return ans;
    }
}

